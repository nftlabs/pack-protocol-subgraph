specVersion: 0.0.3
schema:
  file: ./schema.graphql
dataSources:
  - kind: ethereum/contract
    name: Pack
    network: mumbai
    source:
      address: "0xdF6D4D22918048bA57e849dBBc83d9Bb502bb150"
      abi: Pack
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - Account
        - Pack
        - PackOwnership
      abis:
        - name: Pack
          file: ./abis/Pack.json
      eventHandlers:
        - event: PackCreated(indexed address,indexed address,(uint256,address,string,uint256,uint256,uint256),(address,uint256[],uint256[]))
          handler: handlePackCreated
        - event: PackOpenFulfilled(indexed uint256,indexed address,bytes32,indexed address,uint256)
          handler: handlePackOpenFulfilled
        - event: TransferBatch(indexed address,indexed address,indexed address,uint256[],uint256[])
          handler: handleTransferBatch
        - event: TransferSingle(indexed address,indexed address,indexed address,uint256,uint256)
          handler: handleTransferSingle
      file: ./src/pack.ts
  - kind: ethereum/contract
    name: Market
    network: mumbai
    source:
      address: "0xc8035e0347A9182E6d9973e8B081b166Bb8F075a"
      abi: Market
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - Listing
        - Sale
      abis:
        - name: Market
          file: ./abis/Market.json
      eventHandlers:
        - event: ListingUpdate(indexed address,indexed uint256,(address,address,uint256,uint256,address,uint256,uint256,uint256))
          handler: handleListingUpdate
        - event: NewListing(indexed address,indexed address,indexed uint256,(address,address,uint256,uint256,address,uint256,uint256,uint256))
          handler: handleNewListing
        - event: NewSale(indexed address,indexed address,indexed uint256,address,(address,address,uint256,uint256,address,uint256,uint256,uint256))
          handler: handleNewSale
      file: ./src/market.ts
  - kind: ethereum/contract
    name: ProtocolControl
    network: mumbai
    source:
      address: "0x932a80d12133daDa78d1eFeAa69C53f35b7717eB"
      abi: ProtocolControl
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - Module
        - Role
      abis:
        - name: ProtocolControl
          file: ./abis/ProtocolControl.json
      eventHandlers:
        - event: ModuleInitialized(bytes32,address)
          handler: handleModuleInitialized
        - event: ModuleUpdated(bytes32,address)
          handler: handleModuleUpdated
        - event: RoleAdminChanged(indexed bytes32,indexed bytes32,indexed bytes32)
          handler: handleRoleAdminChanged
        - event: RoleGranted(indexed bytes32,indexed address,indexed address)
          handler: handleRoleGranted
        - event: RoleRevoked(indexed bytes32,indexed address,indexed address)
          handler: handleRoleRevoked
      file: ./src/protocol_control.ts
  - kind: ethereum/contract
    name: Reward
    network: mumbai
    source:
      address: "0xe9559e34a8A32FA8Dc050fAaFD9343B666BC92CF"
      abi: Reward
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - Account
        - RewardOwnership
        - Reward
        - RewardUnderlyingToken
        - RewardUnderlyingTokenERC20
        - RewardUnderlyingTokenERC721
      abis:
        - name: Reward
          file: ./abis/Rewards.json
      eventHandlers:
        - event: ERC20Redeemed(indexed address,indexed address,uint256,uint256)
          handler: handleERC20Redeemed
        - event: ERC20Rewards(indexed address,indexed address,uint256,uint256,string)
          handler: handleERC20Rewards
        - event: ERC721Redeemed(indexed address,indexed address,uint256,uint256)
          handler: handleERC721Redeemed
        - event: ERC721Rewards(indexed address,indexed address,uint256,uint256,string)
          handler: handleERC721Rewards
        - event: NativeRewards(indexed address,uint256[],string[],uint256[])
          handler: handleNativeRewards
        - event: TransferBatch(indexed address,indexed address,indexed address,uint256[],uint256[])
          handler: handleTransferBatch
        - event: TransferSingle(indexed address,indexed address,indexed address,uint256,uint256)
          handler: handleTransferSingle
      file: ./src/reward.ts
